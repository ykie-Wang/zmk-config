/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &mt NUMBER_1 Q  &mt NUMBER_2 W  &mt NUMBER_3 E    &mt NUMBER_4 R  &mt N5 T     &mt NUMBER_6 Y  &mt N7 U  &mt N8 I   &mt N9 O  &mt N0 P  &kp BSPC
&kp LEFT_SHIFT    &kp A           &kp S           &kp D             &kp F           &kp G        &kp H           &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_COMMAND  &kp Z           &kp X           &kp C             &kp V           &kp B        &kp N           &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp ESC
                                                  &kp LEFT_CONTROL  &mo 1           &kp SPACE    &kp RET         &mo 2     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp EXCLAMATION  &kp AT_SIGN   &kp HASH          &kp DOLLAR       &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&kp LEFT_SHIFT    &kp LEFT         &kp UP_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &trans         &kp MINUS  &kp EQUAL      &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp LESS_THAN          &kp GREATER_THAN
&kp LEFT_COMMAND  &trans           &trans        &trans            &trans           &trans         &kp UNDER  &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp PIPE               &kp TILDE
                                                 &kp LEFT_CONTROL  &trans           &kp SPACE      &kp RET    &trans         &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4         &kp F5           &kp F6             &kp F7   &kp F8          &kp F9          &kp F10          &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3     &bt BT_SEL 4       &trans   &trans          &kp UP          &trans           &trans   &trans
&kp LSHFT   &bt BT_NXT    &bt BT_PRV    &bt BT_DISC 0  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI    &trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &trans
                                        &kp LGUI       &trans           &kp SPACE          &kp RET  &trans          &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };
    };
};
